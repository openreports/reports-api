// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	openreportsiov1alpha1 "github.com/openreports/reports-api/apis/openreports.io/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ReportLister helps list Reports.
// All objects returned here must be treated as read-only.
type ReportLister interface {
	// List lists all Reports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*openreportsiov1alpha1.Report, err error)
	// Reports returns an object that can list and get Reports.
	Reports(namespace string) ReportNamespaceLister
	ReportListerExpansion
}

// reportLister implements the ReportLister interface.
type reportLister struct {
	listers.ResourceIndexer[*openreportsiov1alpha1.Report]
}

// NewReportLister returns a new ReportLister.
func NewReportLister(indexer cache.Indexer) ReportLister {
	return &reportLister{listers.New[*openreportsiov1alpha1.Report](indexer, openreportsiov1alpha1.Resource("report"))}
}

// Reports returns an object that can list and get Reports.
func (s *reportLister) Reports(namespace string) ReportNamespaceLister {
	return reportNamespaceLister{listers.NewNamespaced[*openreportsiov1alpha1.Report](s.ResourceIndexer, namespace)}
}

// ReportNamespaceLister helps list and get Reports.
// All objects returned here must be treated as read-only.
type ReportNamespaceLister interface {
	// List lists all Reports in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*openreportsiov1alpha1.Report, err error)
	// Get retrieves the Report from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*openreportsiov1alpha1.Report, error)
	ReportNamespaceListerExpansion
}

// reportNamespaceLister implements the ReportNamespaceLister
// interface.
type reportNamespaceLister struct {
	listers.ResourceIndexer[*openreportsiov1alpha1.Report]
}
