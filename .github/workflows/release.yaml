# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: release

permissions: {}

on:
  push:
    tags:
      - v*

jobs:
  github:
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to write releases
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Parse version
        id: version
        uses: booxmedialtd/ws-action-parse-semver@7784200024d6b3fc01253e617ec0168daf603de3 # v1.4.7
        with:
          input_string: ${{ github.ref_name }}
          version_extractor_regex: ^v(.*)$
      - uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          make_latest: ${{ steps.version.outputs.prerelease == '' }}
          prerelease: ${{ steps.version.outputs.prerelease != '' }}
          fail_on_unmatched_files: true
          files: |
            config/install.yaml
            config/crd/openreports.io_clusterreports.yaml
            config/crd/openreports.io_reports.yaml

  manifests:
    runs-on: ubuntu-latest
    needs:
      - github
    permissions:
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
      - name: Install Flux CLI
        uses: fluxcd/flux2/action@b6e76ca2534f76dcb8dd94fb057cdfa923c3b641 # v2.7.3
      - name: Login to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push manifests to GHCR with Flux
        env:
          CR_PAT_ARTIFACTS:  ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          flux push artifact oci://ghcr.io/${{ github.repository_owner }}/manifests/openreports:${{ github.ref_name }} \
            --path=config/install.yaml \
            --source=$(git config --get remote.origin.url) \
            --revision=${{ github.ref_name }}/$(git rev-parse HEAD)
      - name: Sign manifests in GHCR with Cosign
        run: |
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/manifests/openreports:${{ github.ref_name }}

  helm:
    runs-on: ubuntu-latest
    needs:
      - github
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
      pages: write # needed for pages access
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
      - name: Install Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
      - name: Parse version
        id: version
        uses: booxmedialtd/ws-action-parse-semver@7784200024d6b3fc01253e617ec0168daf603de3 # v1.4.7
        with:
          input_string: ${{ github.ref_name }}
          version_extractor_regex: ^v(.*)$
      - name: Run chart-releaser
        uses: stefanprodan/helm-gh-pages@0ad2bb377311d61ac04ad9eb6f252fb68e207260 #v1.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          linting: off
          charts_dir: charts
          chart_version: ${{ steps.version.outputs.fullversion }}
      - name: Login to GitHub container registry
        run: |
          helm registry login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Publish OCI Chart
        run: |
          helm package charts/openreports --version ${{ steps.version.outputs.fullversion }} --destination .dist/
          helm push .dist/openreports-*.tgz oci://ghcr.io/${{ github.repository_owner }}/charts |& tee .digest
          cosign login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/charts/openreports@$(cat .digest | awk -F "[, ]" '/Digest/{print $NF}')
