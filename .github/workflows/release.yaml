name: release-helm

permissions: {}

on:
  push:
    tags:
      - v*

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup build env
        uses: ./.github/actions/setup-build-env
        timeout-minutes: 30
      - uses: "marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0" # v1.12.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false

  lint-artifacthub:
    runs-on: ubuntu-latest
    container:
      image: artifacthub/ah
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run ah lint
        working-directory: ./chart/
        run: ah lint
  
  push-and-sign-install-manifest:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access  
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup build env
        uses: ./.github/actions/setup-build-env
        timeout-minutes: 10
      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb # v2.6.4
        with:
          version: 0.35.0
      - name: Install Cosign
        uses: sigstore/cosign-installer@fb28c2b6339dcd94da6e4cbcbc5e888961f6f8c3 # v3.9.0
      - name: Build yaml manifest
        run: VERSION=${{ github.ref_name }} make codegen-manifest-release
      - name: Upload install manifest
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # 2.11.2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .manifest/release.yaml
          asset_name: install.yaml
          tag: ${{ github.ref }}
      - name: Upload CRD manifest
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # 2.11.2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: crd/**/*.yaml
          file_glob: true
          tag: ${{ github.ref }}
      - name: Login to GHCR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push manifests to GHCR with Flux
        env:
          CR_PAT_ARTIFACTS:  ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          mkdir -p config/.release-manifests
          cp .manifest/release.yaml config/.release-manifests/install.yaml
          cd config/.release-manifests/ && \
          flux push artifact oci://ghcr.io/${{ github.repository_owner }}/manifests/openreports:${{ github.ref_name }} \
            --path="." \
            --source="$(git config --get remote.origin.url)" \
            --revision="${{ github.ref_name }}/$(git rev-parse HEAD)"
      - name: Sign manifests in GHCR with Cosign
        run: |
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/manifests/openreports:${{ github.ref_name }}

  push-and-sign-helm-release:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: write
      packages: write
      id-token: write
      pages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup-build-env
        uses: ./.github/actions/setup-build-env
        timeout-minutes: 10
      - name: Install helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
        with:
          version: v3.10.3
        
      - name: Install Cosign
        uses: sigstore/cosign-installer@fb28c2b6339dcd94da6e4cbcbc5e888961f6f8c3 # v3.9.0
      
      - name: Set version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
      - name: Set semver version
        run: echo "RELEASE_SEMVER_VERSION=${RELEASE_VERSION#openreports-}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - name: Create charts tmp directory
        run: |
          mkdir -p charts-tmp
          cp -r chart charts-tmp/openreports
      
      - name: Run chart-releaser
        uses: stefanprodan/helm-gh-pages@0ad2bb377311d61ac04ad9eb6f252fb68e207260 #v1.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          linting: off
          charts_dir: charts-tmp
          chart_version: ${{ env.RELEASE_SEMVER_VERSION }}
      
      - name: Login to GitHub container registry
        run: |
          helm registry login ghcr.io -u ${GITHUB_ACTOR} -p ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish OCI Chart
        run: |
          helm package charts-tmp/openreports --version ${{ env.RELEASE_SEMVER_VERSION }} --destination .dist/
          helm push .dist/openreports-*.tgz oci://ghcr.io/${{ github.repository_owner }}/charts |& tee .digest
          cosign login --username ${GITHUB_ACTOR} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/charts/openreports@$(cat .digest | awk -F "[, ]" '/Digest/{print $NF}')

